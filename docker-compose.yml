version: '2'

services:
  mongo-express:
    container_name: mongo-express
    restart: always
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb  
  mongodb:
    container_name: mongodb
    restart: always
    image: mongo:3.4.2
    ports:
      - 27017:27017
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  # kafka:
  #   build: .
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     KAFKA_ADVERTISED_HOST_NAME: 0.0.0.0
  #     KAFKA_CREATE_TOPICS: "test:1:1"
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  mariadb:
    image: mariadb
    container_name: mariadb
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=Initial0
    restart: always
  rabbitmq:
    image: rabbitmq:3.6.5-management
    container_name: rabbitmq
    ports:
      - 15672:15672
      - 5672:5672
    hostname: rabbitmq
    restart: always
  etcd:
    image: quay.io/coreos/etcd:v3.0.4
    container_name: etcd
    ports:
      - 2379:2379
      - 2380:2380
    command: >
      /usr/local/bin/etcd -name etcd0  -cors='*' 
      -advertise-client-urls http://127.0.0.1:2379 
      -listen-client-urls http://0.0.0.0:2379 
      -initial-advertise-peer-urls http://127.0.0.1:2380 
      -listen-peer-urls http://0.0.0.0:2380 
      -initial-cluster-token etcd 
      -initial-cluster etcd0=http://127.0.0.1:2380 
      -initial-cluster-state new
    restart: always
#  etcd-browser:
#    image: reggiezhang/etcd-browser
#    container_name: etcd-browser
#    ports:
#      - 8000:8000
#    environment:
#      - ETCD_HOST=localhost
#      - ETCD_PORT=2379
#    restart: always
  redis:
    image: redis:3.2.3-alpine
    container_name: redis
    ports:
      - 6379:6379
    restart: always
  storage:
    image: openzipkin/zipkin-cassandra:1.7.0
    container_name: cassandra
    ports:
      - 9042:9042

  # The zipkin process services the UI, and also exposes a POST endpoint that
  # instrumentation can send trace data to. Scribe is enabled by default.
  zipkin:
    image: openzipkin/zipkin:1.7.0
    container_name: zipkin
    environment:
      - STORAGE_TYPE=cassandra
      # When overriding this value, note the minimum supported version is 2.2
      - CASSANDRA_CONTACT_POINTS=cassandra
      # Uncomment to disable scribe
      # - SCRIBE_ENABLED=false
      # Uncomment to enable self-tracing
      # - SELF_TRACING_ENABLED=true
    ports:
      # Listen port for the Scribe transport
      - 9410:9410
      # Historical port used for the Zipkin HTTP Api
      - 9411:9411
      # Zipkin UI used to be on a separate process listening on port 8080
      - 8080:9411
    depends_on:
      - storage

  # Adds a cron to process spans since midnight every hour, and all spans each day
  # This data is served by http://192.168.99.100:8080/dependency
  #
  # For more details, see https://github.com/openzipkin/docker-zipkin-dependencies
  dependencies:
    image: openzipkin/zipkin-dependencies
    container_name: dependencies
    entrypoint: crond -f
    environment:
      - STORAGE_TYPE=cassandra
      - CASSANDRA_CONTACT_POINTS=cassandra
    depends_on:
      - storage

